/**
 * Toolbar Toggler Plugin
 * Released under Attribution-ShareAlike 4.0 International License.
 * Author: Ignacio Gros (http://gros.es/)
 * License: http://creativecommons.org/licenses/by-sa/4.0/ 
 * Based in the wp_adv button (wordpress plugin)
 * Icon by WordPress
 */
tinymce.PluginManager.add('toggletoolbars', function (editor, url) {

	let toolbar_0 = `
	<?xml version="1.0" encoding="utf-8"?>
	<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
	<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
		width="24px" height="24px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve">
	<desc>Created with Sketch.</desc>
	<g>
		<path d="M2.503,1.87v7.603h18.994V1.87H2.503z M20.258,8.182H3.769V3.117h16.488L20.258,8.182L20.258,8.182z"/>
		<rect x="5.077" y="4.395" width="2.531" height="2.533"/>
		<rect x="8.876" y="4.395" width="2.531" height="2.533"/>
		<rect x="12.633" y="4.395" width="2.533" height="2.533"/>
		<rect x="16.445" y="4.395" width="2.532" height="2.533"/>
		<path d="M2.503,22.13h18.994V10.74H2.503V22.13z M3.769,12h16.488v8.87H3.769V12z"/>
		<rect x="5.077" y="13.286" width="2.531" height="2.532"/>
		<rect x="8.876" y="13.286" width="2.531" height="2.532"/>
		<rect x="12.633" y="13.286" width="2.533" height="2.532"/>
		<rect x="16.445" y="13.286" width="2.532" height="2.532"/>
		<rect x="5.056" y="17.058" width="10.13" height="2.532"/>
		<rect x="16.445" y="17.058" width="2.532" height="2.532"/>
	</g>
	</svg>
	`;

	tinymceToolbarToggler = {

		state: "visibleToolbars",

		check: function (skipCheck) {

			// Toolbars
			let myToolbars = editor.editorContainer.querySelectorAll('.tox-toolbar');

			if (!myToolbars || myToolbars.length < 3) return;

			var state = tinymceToolbarToggler.state;

			if (skipCheck != true && tinymce.editors.length > 1) {
				tinymce.each(myToolbars, function (toolbar, i) {
					if (i == 0) {// toolbar de text y feedback
						// if (toolbar.visible()) state = 'hiddenToolbars';
						if (toolbar.style.display != 'none') state = 'hiddenToolbars';
						else state = 'visibleToolbars';
					}
				});
			}

			var newState = "visibleToolbars";
			if (state == 'visibleToolbars') newState = 'hiddenToolbars';

			tinymce.each(myToolbars, function (toolbar, i) {
				if (i != 0) {// toolbar de text y feedback
					if (state == 'visibleToolbars') toolbar.style.display = 'none';
					else toolbar.style.display = '';
				} else {
					if (state == 'visibleToolbars') toolbar.style.display = '';
					else toolbar.style.display = 'none';
				}

			});

			tinymceToolbarToggler.state = newState;

			// Remember the last position
			tinymceToolbarToggler.cookie.set("tinymceToolbarTogglerPreference", newState, 30);

		},
		cookie: {

			set: function (cname, cvalue, exdays) {
				var d = new Date();
				d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
				var expires = "expires=" + d.toGMTString();
				document.cookie = cname + "=" + cvalue + "; " + expires + ";path=/;SameSite=Lax";
			},

			get: function (cname) {
				var name = cname + "=";
				var ca = document.cookie.split(';');
				for (var i = 0; i < ca.length; i++) {
					var c = ca[i];
					while (c.charAt(0) == ' ') {
						c = c.substring(1);
					}
					if (c.indexOf(name) == 0) {
						return c.substring(name.length, c.length);
					}
				}
				return "";
			}

		}

	} // tinymceToolbarToggler



	editor.ui.registry.addIcon('toggletoolbars', toolbar_0);
	editor.ui.registry.addToggleButton('toggletoolbars', {
		icon: 'toggletoolbars',
		tooltip: _('Toolbar Toggle'),
		onAction: tinymceToolbarToggler.check
	});

	// Hide the toolbars after loading
	editor.on('init', function () {

		// Last position

		// Default: Hide the toolbar

		// Except in multiple-visible mode when there's more than one editor (to review)
		// if (tinymce.editors.length > 1 && $exeTinyMCE.mode == "multiple-visible") tinymceToolbarToggler.cookie.set("tinymceToolbarTogglerPreference", "visibleToolbars", 30);

		var ck = tinymceToolbarToggler.cookie.get("tinymceToolbarTogglerPreference");
		if (!ck || ck != "visibleToolbars") {

			// tinymceToolbarToggler.check(true); // true = skipCheck

			let myToolbars = editor.editorContainer.querySelectorAll('.tox-toolbar');
			// Hide the toolbar toggler
			if (!myToolbars || myToolbars.length < 3) return;

			tinymce.each(myToolbars, function (toolbar, i) {
				if (i != 0) {
					toolbar.style.display = "none";
				}
			});

		} else {
			let myToolbars = editor.editorContainer.querySelectorAll('.tox-toolbar');
			// Hide the toolbar toggler
			if (!myToolbars || myToolbars.length < 3) return;

			tinymce.each(myToolbars, function (toolbar, i) {
				if (i == 0) {
					toolbar.style.display = "none";
					// tinymceToolbarToggler.state = "hiddenToolbars";
				}
			});
		}

	});

});